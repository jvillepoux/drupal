diff --git a/cumulus.module b/cumulus.module
index f7dd9e0..3c7aa5f 100644
--- a/cumulus.module
+++ b/cumulus.module
@@ -117,10 +117,19 @@ function cumulus_block_view($delta) {
   else {
     $vocs = array(1);
   }
-  $tags = tagadelic_get_weighted_tags($vocs, $config['tagadelic_step'], $config['tagadelic_limit']);
-  $tags = tagadelic_sort_tags($tags);
+  
+  $tags = cumulus_get_weighted_tags($vocs,$config['tagadelic_step'], $config['tagadelic_limit']);
+  
+  //took form new tagadelic module to prepare cloud
+  $cloud = new TagadelicCloud("tagadalic_taxonomy");
+  foreach ($tags as $term) {
+    $tag = new TagadelicTag($term->tid, $term->name, $term->count);
+    $tag->set_link("taxonomy/term/{$term->tid}");
+    $cloud->add_tag($tag);
+  }   
+  
   $tags_formatted_flash = theme('cumulus_weighted', array('terms' => $tags, 'config' => $config));
-  $tags_formatted_alt = theme('tagadelic_weighted', array('terms' => $tags));
+  $tags_formatted_alt = theme("tagadelic_taxonomy_cloud", array("tags" => $cloud->get_tags()));
 
   $js = drupal_get_path('module', 'cumulus') . '/cumulus.js';
   if (file_exists($js)) {
@@ -288,4 +297,53 @@ function cumulus_variable_set($name, $delta, $default = NULL) {
  */
 function cumulus_variable_del($name, $delta) {
   return variable_del('cumulus_' . $delta . '_' . $name);
-}
\ No newline at end of file
+}
+
+/**
+ * Get tags by selected vocs and add weight.
+ */
+function cumulus_get_weighted_tags($vocs,$steps, $max_amount = 60){
+    
+  $query = db_select('taxonomy_index', 'i');
+  $alias = $query->leftjoin('taxonomy_term_data', 't', '%alias.tid = i.tid');
+
+  $query->addExpression('COUNT(i.nid)', 'count');
+  $query->addField($alias, 'tid');
+  $query->addField($alias, 'name');
+  $query->addField($alias, 'description');
+  $query->addField($alias, 'vid');
+  $query->condition('t.vid', $vocs, 'IN');
+
+  $query->range(0, $max_amount)
+    ->groupBy("i.tid");
+
+  $result = $query->execute();
+
+  $terms = array();
+  while($record = $result->fetchAssoc()) {
+    $terms[] = (object) $record;
+  }
+
+  // Find minimum and maximum log-count. By our MatheMagician Steven Wittens aka
+  // UnConeD.
+  $tags_tmp = array();
+  $min = 1e9;
+  $max = -1e9;
+  foreach ($terms as $id => $tag) {
+    $tag->number_of_posts = $tag->count;
+    $tag->count = log($tag->count);
+    $min = min($min, $tag->count);
+    $max = max($max, $tag->count);
+    $tags_tmp[$id] = $tag;
+  }
+
+  // Note: we need to ensure the range is slightly too large to make sure even
+  // the largest element is rounded down.
+  $range = max(.01, $max - $min) * 1.0001;
+
+  foreach ($tags_tmp as $key => $value) {
+    $terms[$key]->weight = 1 + floor($steps * ($value->count - $min) / $range);
+  }
+  
+  return $terms;
+}
